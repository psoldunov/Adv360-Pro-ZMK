#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"
      #include "version.dtsi"
      #ifndef VERSION_MACRO

        macro_ver: macro_ver {
            compatible = "zmk,behavior-macro";
            label = "macro_version";
            #binding-cells = <0>;
            bindings = <&kp RET>;
        };

        #endif

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    macros {
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp EQUAL  &kp N1     &kp N2    &kp N3    &kp N4     &kp N5  &tog 1                                                            &mo 3               &kp N6  &kp N7  &kp N8     &kp N9    &kp N0    &kp MINUS
&kp TAB    &kp Q      &kp W     &kp E     &kp R      &kp T   &kp LC(LGUI)                                                      &sl 4               &kp Y   &kp U   &kp I      &kp O     &kp P     &kp BSLH
&kp ESC    &kp A      &kp S     &kp D     &kp F      &kp G   &kp LC(LG(LSHFT))  &kp LCTRL  &kp LALT      &kp LGUI   &kp RCTRL  &kt LC(LA(LSHIFT))  &kp H   &kp J   &kp K      &kp L     &kp SEMI  &kp SQT
&kp LSHFT  &kp Z      &kp X     &kp C     &kp V      &kp B                                 &kp HOME      &kp PG_UP                                 &kp N   &kp M   &kp COMMA  &kp DOT   &kp FSLH  &kp RSHFT
&mo 2      &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT          &kp BSPC           &kp DEL    &kp END       &kp PG_DN  &kp ENTER  &kp SPACE                   &kp UP  &kp DOWN   &kp LBKT  &kp RBKT  &mo 2
            >;
        };

        keypad {
            bindings = <
&kp EQUAL  &kp N1     &kp N2    &kp N3    &kp N4     &kp N5  &trans                                                   &mo 3      &kp N6  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp MINUS
&kp TAB    &kp Q      &kp W     &kp E     &kp R      &kp T   &none                                                    &none      &kp Y   &kp KP_N7   &kp KP_N8     &kp KP_N9      &kp KP_MINUS     &kp BSLH
&kp ESC    &kp A      &kp S     &kp D     &kp F      &kp G   &none     &kp LCTRL  &kp LALT      &kp LGUI   &kp RCTRL  &none      &kp H   &kp KP_N4   &kp KP_N5     &kp KP_N6      &kp KP_PLUS      &kp SQT
&kp LSHFT  &kp Z      &kp X     &kp C     &kp V      &kp B                        &kp HOME      &kp PG_UP                        &kp N   &kp KP_N1   &kp KP_N2     &kp KP_N3      &kp KP_ENTER     &kp RSHFT
&mo 2      &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT          &kp BSPC  &kp DEL    &kp END       &kp PG_DN  &kp ENTER  &kp KP_N0          &kp UP      &kp DOWN      &kp KP_DOT     &kp RBKT         &mo 2
            >;
        };

        fn {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6  &tog 1                                      &mo 3   &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&trans  &trans  &trans  &trans  &trans  &trans  &none                                       &none   &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans  &none   &trans  &trans      &trans  &trans  &none   &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                  &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans          &trans  &trans  &trans   &trans   &trans
            >;
        };

        mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &trans                  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                            &bootloader             &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &macro_ver    &none                             &none      &none                                           &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC  &bl BL_DEC  &none  &none  &none
            >;
        };

        layer_4 {
            bindings = <
&kp EQUAL  &kp N1     &kp N2  &kp N3  &kp N4  &kp N5  &none                                  &none  &kp N6         &kp N7  &kp N8     &kp N9    &kp N0    &kp MINUS
&none      &kp Q      &kp W   &kp E   &kp R   &kp T   &none                                  &none  &kp LC(LA(Y))  &kp U   &kp I      &kp O     &kp P     &kp BSLH
&none      &kp A      &kp S   &kp D   &kp F   &kp G   &none  &none  &none      &none  &none  &none  &kp H          &kp J   &kp K      &kp L     &kp SEMI  &kp SQT
&none      &kp Z      &kp X   &kp C   &kp V   &kp B                 &none      &none                &kp N          &kp M   &kp COMMA  &kp DOT   &kp FSLH  &none
&none      &kp GRAVE  &none   &none   &none           &none  &none  &none      &none  &none  &none                 &none   &none      &kp LBKT  &kp RBKT  &none
            >;
        };

layer_5 {
    bindings = <
LC(LA(EQUAL))  LC(LA(N1))   LC(LA(N2)) LC(LA(N3)) LC(LA(N4)) LC(LA(N5)) &none                                  &none  LC(LA(N6))     LC(LA(N7)) LC(LA(N8)) LC(LA(N9)) LC(LA(N0)) LC(LA(MINUS))
&none           LC(LA(Q))    LC(LA(W))  LC(LA(E))  LC(LA(R))  LC(LA(T))  &none                                  &none  LC(LA(LC(LA(Y)))) LC(LA(U)) LC(LA(I))  LC(LA(O))  LC(LA(P))  LC(LA(BSLH))
&none           LC(LA(A))    LC(LA(S))  LC(LA(D))  LC(LA(F))  LC(LA(G))  &none  &none  &none      &none  &none  &none  LC(LA(H))      LC(LA(J))  LC(LA(K))  LC(LA(L))  LC(LA(SEMI)) LC(LA(SQT))
&none           LC(LA(Z))    LC(LA(X))  LC(LA(C))  LC(LA(V))  LC(LA(B))                 &none      &none                LC(LA(N))      LC(LA(M))  LC(LA(COMMA)) LC(LA(DOT)) LC(LA(FSLH)) &none
&none           LC(LA(GRAVE))&none     &none     &none               &none  &none  &none      &none  &none  &none                 &none   &none      LC(LA(LBKT)) LC(LA(RBKT)) &none
    >;
};


        layer_6 {
            bindings = <
&kp EQUAL  &kp N1     &kp N2  &kp N3  &kp N4  &kp N5  &none                                  &none  &kp N6  &kp N7  &kp N8     &kp N9    &kp N0    &kp MINUS
&none      &kp Q      &kp W   &kp E   &kp R   &kp T   &none                                  &none  &kp Y   &kp U   &kp I      &kp O     &kp P     &kp BSLH
&none      &kp A      &kp S   &kp D   &kp F   &kp G   &none  &none  &none      &none  &none  &none  &kp H   &kp J   &kp K      &kp L     &kp SEMI  &kp SQT
&none      &kp Z      &kp X   &kp C   &kp V   &kp B                 &none      &none                &kp N   &kp M   &kp COMMA  &kp DOT   &kp FSLH  &none
&none      &kp GRAVE  &none   &none   &none           &none  &none  &none      &none  &none  &none          &none   &none      &kp LBKT  &kp RBKT  &none
            >;
        };
    };
};
